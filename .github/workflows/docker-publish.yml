name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - "*"

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ffmpeg-static

jobs:
  
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up qemu
        uses: docker/setup-qemu-action@v1
        with:
            image: tonistiigi/binfmt:latest
            platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run tests
        run: docker buildx build --platform linux/arm64,linux/amd64 . --file Dockerfile

  
  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up qemu
        uses: docker/setup-qemu-action@v1
        with:
            image: tonistiigi/binfmt:latest
            platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker buildx build --platform linux/arm64,linux/amd64 . --file Dockerfile --target build --push --tag $IMAGE_ID-dev:$VERSION
          #docker buildx build --platform linux/amd64 . --file Dockerfile --target build --push --tag $IMAGE_ID-dev:$VERSION
          docker buildx build --platform linux/arm64,linux/amd64 . --file Dockerfile --push --tag $IMAGE_ID-bin:$VERSION
          #docker buildx build --platform linux/amd64 . --file Dockerfile --push --tag $IMAGE_ID-bin:$VERSION
